{# empty Twig template #}

<!-- Modal -->
<div class="modal fade" id="addElementToACartographyBox" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Ajouter un element</h4>
            </div>
            <div class="modal-body">
                <table id="elementList" class="display" cellspacing="0" width="100%">
                    <thead>
                        <tr>
                            <th>id</th>
                            <th>Nom</th>
                            <th>type element</th>
                            <th>Choisir</th>
                        </tr>
                    </thead>

       
            </table>

          <table id="elementList2" class="display" cellspacing="0" width="100%">
                    <thead>
                        <tr>
                            <th>id</th>
                            <th>Nom</th>
                            <th>type element</th>
                            <th>Choisir</th>
                        </tr>
                    </thead>
       
            </table>


            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Fermer</button>
                <button type="button" class="btn btn-primary" id="addElementToACartography">Ajouter</button>
            </div>
        </div>
    </div>
</div>


<script>
    $(document).ready(function () {
        $('#elementList').DataTable({
            "sAjaxSource": "{{ path("kartographerz_element_elementList") }}",
            "aoColumns": [

                { "mData": "id" },
                { "mData": "name" },
                { "mData": "typeelementlabel" },
                { "mData":  function ( source, type, val ) {

                        return " <input type='checkbox' name='option1'>";
                    }
                }
            ],
        });


     
// récupération des éléments de la cartographie courante ________________________________________________________________________________________


   $('#elementList2').DataTable({
            "sAjaxSource": "{{ path("kartographerz_element_elementList") }}", 
            "aoColumns": [
                { "mData": "id" }
            ],
        });


// _________________________________________________________________________________________________________________________________________________




        $("#addElementToACartography").click(function () {
            var elements = $("#elementList tbody tr");
            var checkedCheckboxes = getAllCheckedCheckboxes();
            var elementsId = getCheckboxesId(checkedCheckboxes);
            console.log(elementsId)

        });

        function getAllCheckedCheckboxes() {
            var checkboxes = $("#elementList input[type=checkbox]");
            var checkedCheckboxes = new Array();
            $(checkboxes).each(function () {
                var checkbox = $(this);
                if (isChecked(checkbox)) {
                    checkedCheckboxes.push(checkbox);
                }
            })
            return checkedCheckboxes;
        }

        function getCheckboxesId(checkboxes) {
            var ids = new Array();
            $(checkboxes).each(function () {
                ids.push($(this).attr('id'));
            });
            return ids;
        }

        function isChecked(theCheckbox) {
            return $(theCheckbox).prop('checked');
        }

    });

//alert("test");
</script>