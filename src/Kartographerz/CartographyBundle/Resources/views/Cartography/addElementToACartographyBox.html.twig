{# empty Twig template #}

<!-- Modal -->
<div class="modal fade" id="addElementToACartographyBox" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">{{'element_to_carto.add'|trans}}</h4>
            </div>
            <div class="modal-body">
                <div class="iddata" data-videoid={{ app.request.get('id') }}></div>
                <table id="elementList" class="display" cellspacing="0" width="100%">
                    <thead>
                        <tr>
                            <th>id</th>
                            <th>{{'element_to_carto.name'|trans}}</th>
                            <th>{{'element_to_carto.type'|trans}}</th>
                            <th>{{'element_to_carto.choice'|trans}}</th>
                        </tr>
                    </thead>


                </table>


                <table id="linkList" class="display" cellspacing="0" width="100%">
                    <thead>
                        <tr>
                            <th>id</th>
                            <th>Ele1</th>
                            <th>Ele2</th>
                            <th>Delete</th>
                        </tr>
                    </thead>
                    <tfoot>
                        <tr>
                            <td><button type="button" class="btn btn-default" id="addRow"><i class="fa fa-plus"></i></button></td>

                            <td></td>
                            <td></td>
                        </tr>
                    </tfoot>
                </table>


            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">{{'submit.close'|trans}}</button>
                <button type="button" class="btn btn-primary" id="addElementToACartography">{{'submit.add'|trans}}</button>
            </div>
        </div>
    </div>
</div>


<script>
    $(document).ready(function () {
        var idCarto = $(".iddata").data("videoid");

        var idVersionCarto = $(".iddata").data("videoid");



//777777
        /*
         var versionsCarto = []; 
         
         $.ajax({
         type: "POST",
         url: "{{ path("kartographerz_cartography_versionCartographyList")}}",
         dataType: 'json',
         cache: false,
         success: function(data){
         
         var dataTab = data.data;
         
         for (var i in dataTab) {
         var idVersionCartoTable = dataTab[i].id;
         console.log(idVersionCartoTable);
         console.log("aa");
         var idCartoTable = dataTab[i].cartography_id;
         console.log(idCartoTable);
         
         var tab = [idVersionCartoTable, idCartoTable];
         
         //versionsCarto.push(tab);
         }
         
         }
         
         
         }); 
         
         //console.log(versionsCarto[0][0]);
         */
//777777





// récupération des éléments de la cartographie courante ________________________________________________________________________________________

        var elementsCarto = [];
        $.ajax({
            type: "POST",
            url: "{{ path("kartographerz_element_versionElementList")}}",
            dataType: 'json',
            cache: false,
            success: function (data) {

                var dataTab = data.data;

                for (var i in dataTab) {
                    var idCartoTable = dataTab[i].version_id;
                    var id = dataTab[i].element_id;

                    if (idCartoTable == idCarto) {
                        elementsCarto.push(id);
                        console.log(id)
                    }

                }

            }
        });

// _________________________________________________________________________________________________________________________________________________






        $('#elementList').DataTable({
            "sAjaxSource": "{{ path("kartographerz_element_elementList") }}",
            "aoColumns": [
                {"mData": "id"},
                {"mData": "name"},
                {"mData": "typeelementlabel"},
                {"mData": function (row, source, type, val) {


                        if ($.inArray(row.id, elementsCarto) >= 0) {
                            return " <input id=" + row.id + " type='checkbox' checked>";
                        }
                        else {
                            return " <input id=" + row.id + " type='checkbox'>";
                        }


                    }
                }
            ],
        });

        var counter = 1;
        var t = $('#linkList').DataTable({
            "sAjaxSource": "{{ path("kartographerz_element_elementList") }}",
            "aoColumns": [
                {"mData": function (val) {
                        var id;

                        if (val.id !== "undefined") {
                            id = val.id;
                        }
                        else {
                            id = val[0];
                        }
                        console.log(id)
                        return id;
                    }
                },
                {"mData": function (val) {
                        return "lol"
                    }
                },
                {"mData": function () {
                        return "nom ele2";
                    }
                },
                {"mData": function (row) {
                        return '<button id="delete_' + row.id + '" type="button" class="btn btn-danger delete"><i class="fa fa-trash delete"></i></button>';

                    }
                },
            ],
        });



// Partie de Franck

        $("#addElementToACartography").click(function () {
            var elements = $("#elementList tbody tr");
            var checkedCheckboxes = getAllCheckedCheckboxes();
            var elementsId = getCheckboxesId(checkedCheckboxes);
            console.log(elementsId)

        });

        $("#delete_1").click(function () {
            console.log("delete")
        });

        function getAllCheckedCheckboxes() {
            var checkboxes = $("#elementList input[type=checkbox]");
            var checkedCheckboxes = new Array();
            $(checkboxes).each(function () {
                var checkbox = $(this);
                if (isChecked(checkbox)) {
                    checkedCheckboxes.push(checkbox);
                }
            })
            return checkedCheckboxes;
        }

        function getCheckboxesId(checkboxes) {
            var ids = new Array();
            $(checkboxes).each(function () {
                ids.push($(this).attr('id'));
            });
            return ids;
        }

        function isChecked(theCheckbox) {
            return $(theCheckbox).prop('checked');
        }

        $('#addRow').on('click', function () {
            t.row.add([
                'A',
                '.2',
                '.3',
                '.4',
            ]).draw();
        });


    });


//alert("test");
</script>